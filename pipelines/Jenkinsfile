pipeline {
    agent {
        label 'slave'
    }

    environment {
        MAVEN_HOME = tool 'm3'
        dockerImage = ''
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        REGISTRY='mauron'
    }

    stages {
        
        stage('Clonar Repositorio') {
            steps {
                script {
         
                  def gitLabRepositoryUrl = 'https://gitlab.com/macastil/demo.git'
    
                  git(
                    url: gitLabRepositoryUrl,
                    branch: 'master',
                    credentialsId: 'gitlab-token'
                  )
                }
            }
        }

        stage('Compilar con Maven') {
            steps {
                script {
                    sh "${MAVEN_HOME}/bin/mvn clean package -DskipTests"
                }
            }
        }

        stage('An√°lisis SonarQube') {
            steps {
                script {
                    withSonarQubeEnv('sonar') {
                        sh "${MAVEN_HOME}/bin/mvn sonar:sonar"
                    }
                }
            }
        }
        
        stage('Construir y Publicar Imagen Docker') {
            steps {
                script {
                  sh 'docker build . -t $REGISTRY/demo:$BUILD_ID'
                  sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                  sh 'docker push $REGISTRY/demo:$BUILD_ID'
                 
                }
            }
        }
        
  
    }

    post {
        always {
            // Puedes agregar acciones que se ejecuten siempre, como la limpieza de recursos
            cleanWs()
        }
    }
}

